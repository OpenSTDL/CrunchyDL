import { contextBridge, ipcRenderer } from 'electron'

contextBridge.exposeInMainWorld('myAPI', {
    selectFolder: () => ipcRenderer.invoke('dialog:openDirectory'),
    selectFile: (type: string) => ipcRenderer.invoke('dialog:openFile', type),
    selectEndpoint: (nr: number) => ipcRenderer.invoke('dialog:selectEndpoint', nr),
    getEndpoint: () => ipcRenderer.invoke('dialog:getEndpoint'),
    getFolder: () => ipcRenderer.invoke('dialog:defaultDirectory'),
    openFolder: (dir: string) => ipcRenderer.invoke('dialog:openFolder', dir),
    getFile: (type: string) => ipcRenderer.invoke('dialog:defaultFile', type),
    getArray: (type: string) => ipcRenderer.invoke('dialog:defaultArray', type),
    setArraySub: (va: Array<any>) => ipcRenderer.invoke('dialog:defaultArraySetSub', va),
    setArrayDub: (va: Array<any>) => ipcRenderer.invoke('dialog:defaultArraySetDub', va),
    getProxyActive: () => ipcRenderer.invoke('dialog:proxyActive'),
    setProxyActive: (status: boolean) => ipcRenderer.invoke('dialog:proxyActiveSet', status),
    openWindow: (opt: { title: string; url: string; width: number; height: number; backgroundColor: string }) => ipcRenderer.invoke('window:openNewWindow', opt),
    getUpdateStatus: () => ipcRenderer.invoke('updater:getUpdateStatus'),
    startUpdateDownload: () => ipcRenderer.invoke('updater:download'),
    startUpdateInstall: () => ipcRenderer.invoke('updater:quitAndInstall'),
    selectTEMPFolder: () => ipcRenderer.invoke('dialog:openDirectoryTEMP'),
    getTEMPFolder: () => ipcRenderer.invoke('dialog:getDirectoryTEMP'),
    setEpisodeTemplate: (name: string) => ipcRenderer.invoke('dialog:setEpisodeTemplate', name),
    getEpisodeTemplate: () => ipcRenderer.invoke('dialog:getEpisodeTemplate'),
    setSeasonTemplate: (name: string) => ipcRenderer.invoke('dialog:setSeasonTemplate', name),
    getSeasonTemplate: () => ipcRenderer.invoke('dialog:getSeasonTemplate'),
    setSeasonEnabled: (active: boolean) => ipcRenderer.invoke('dialog:setSeasonEnabledTemplate', active),
    getSeasonEnabled: () => ipcRenderer.invoke('dialog:getSeasonEnabledTemplate'),
    setDefaultVideoQuality: (quality: number) => ipcRenderer.invoke('dialog:setDefaultVideoQualityTemplate', quality),
    getDefaultVideoQuality: () => ipcRenderer.invoke('dialog:getDefaultVideoQualityTemplate'),
    setDefaultAudioQuality: (quality: number) => ipcRenderer.invoke('dialog:setDefaultAudioQualityTemplate', quality),
    getDefaultAudioQuality: () => ipcRenderer.invoke('dialog:getDefaultAudioQualityTemplate'),
    setDefaultOutputFormat: (format: string) => ipcRenderer.invoke('dialog:setDefaultOutputFormatTemplate', format),
    getDefaultOutputFormat: () => ipcRenderer.invoke('dialog:getDefaultOutputFormatTemplate'),
    setDefaultCrunchyrollLanguage: (lang: string) => ipcRenderer.invoke('dialog:setDefaultCrunchyrollLanguageTemplate', lang),
    getDefaultCrunchyrollLanguage: () => ipcRenderer.invoke('dialog:getDefaultCrunchyrollLanguageTemplate')
})
